-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


-- Then I inserted the Spotify Data .csv into the table.

-- Next, I explored the data using the following SQL. 

-- Which artist has the most songs?
SELECT artist_name, COUNT (*) AS song_count
FROM spotifydata
GROUP BY artist_name
ORDER BY song_count DESC
LIMIT 1; 

-- What is the average danceability of all songs?
SELECT ROUND (AVG (danceability), 2) AS avg_danceability
FROM spotifydata; 

-- What is the most energetic song?
SELECT artist_name, track_name, energy 
FROM spotifydata
ORDER BY energy DESC
LIMIT 1; 

-- Which song has the longest duration?
SELECT artist_name, track_name, duration_ms
FROM spotifydata
ORDER BY duration_ms DESC
LIMIT 1; 

-- Which song has the highest acousticness but is still popular (popularity â‰¥ 80)?
SELECT artist_name, track_name, acousticness, popularity
FROM spotifydata
WHERE popularity >=80
ORDER BY acousticness DESC; 
